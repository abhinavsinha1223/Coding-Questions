Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


Example 1:

Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.
Example 2:

Input:
N = 4
Arr[] = {-1,-2,-3,-4}
Output:
-1
Explanation:
Max subarray sum is -1 
of element (-1)






import java.util.*;

public class kadaneAlgo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int i, j, sum,z, n;
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		int arr[] = new int[n];
		for (i = 0; i < n; i++) {
			arr[i] = sc.nextInt();
			
		}
		
		
	int	max=Integer.MIN_VALUE;
		sum=0;
		for(i=0;i<n;i++) {
			sum=sum+arr[i];
			if(sum>max) {
				max=sum;
			}
			if(sum<0) {
				sum=0;
			}
		}
		
		System.out.println(max);
	}

}
